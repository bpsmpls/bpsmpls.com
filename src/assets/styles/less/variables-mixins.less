/* Variables / Mixins
--------------------------*/

// Brand Colors
// -------------------------
// @brand-blue:        #0ba2c3;

// Grays
// -------------------------
@black:		   #000;
@gray-darker:  #222;
@gray-dark:    #333;
@gray:         #555;
@gray-light:   #9a9a9a;
@gray-lighter: #fafafa;
@white:        #fff;

@red:    rgb(255, 99, 71);
@red-75: rgba(255, 99, 71, 0.75);

@font-face {
	font-display:swap;
	font-family:'Zefani';
	font-style:normal;
	font-weight:normal;
	src:url('../media/fonts/zefani.woff2') format('woff2'),
		url('../media/fonts/zefani.woff') format('woff');
}

@font-face {
	font-display:swap;
	font-family:'Otama';
	font-style:normal;
	font-weight:normal;
	src:url('../media/fonts/otama-ep.woff2') format('woff2'),
		url('../media/fonts/otama-ep.woff') format('woff');
}


// Fonts / Text
// -------------------------
@font-family-serif:     'Otama', 'Bodoni', serif;
@font-family-sans:      'Open Sans', Helvetica, sans-serif;
@font-family-cond-sans: 'Open Sans Condensed', Impact, sans-serif;
@font-size-base:         10px;
@line-height-base:       20px;

// Font Weights
// -------------------------
@font-weight-thin:     100;
@font-weight-light:    300;
@font-weight-regular:  400;
@font-weight-bold:     700;
@font-weight-black:    800;


// Mixins
// -----------------------

// Responsive Video
.flex_video(@class:wrap) {
	figure.video {
		margin-bottom:1em;
		
		.@{class} {
			height:0;
			padding-bottom:56.25%; /* 16:9 */
			padding-top:25px;
			position:relative;
		}
		iframe, object, embed, video {
			height:100%;
			left:0;
			position:absolute;
			top:0;
			width:100%;
		}
	}
}

// Images
.fill-max-width() {
	display:block;
	height:auto; 
	max-width:100%; 
}

.fill-width() {
	.fill-max-width();
	width:100%; 
}

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
	.background(@color: @white, @alpha: 1) {
		@forMS: @alpha*100;
		background-color:@color;
		background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		filter: alpha(opacity=@forMS);
	}
	.border(@color: @white, @alpha: 1) {
		border-color:@color;
		border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		.background-clip(padding-box);
	}
}

.clip-path(@clip) {
	-webkit-clip-path:@clip;
	clip-path:@clip;	
}

.text-hide() {
	font: ~"0/0" a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

// Album display

.album-swirl(@base-size:14vw, @rotation:16deg, @size-increment:0.25, @x-increment:0.5, @y-increment:1) {
	.quest      { .transform(rotate(@rotation * 17));   left:15vw + (@x-increment * 20);   top:0vw + (@y-increment * 20);   width:@base-size + (@size-increment * 1);  }
	.bln        { .transform(rotate(@rotation * 16));   left:15vw + (@x-increment * 19);   top:0vw + (@y-increment * 19);   width:@base-size + (@size-increment * 2);  }
	.improv     { .transform(rotate(@rotation * 15));   left:15vw + (@x-increment * 18);   top:0vw + (@y-increment * 18);   width:@base-size + (@size-increment * 3);  }
	.hyperzoa   { .transform(rotate(@rotation * 14));   left:15vw + (@x-increment * 17);   top:0vw + (@y-increment * 17);   width:@base-size + (@size-increment * 4);  }
	.trocaderos { .transform(rotate(@rotation * 13));   left:15vw + (@x-increment * 16);   top:0vw + (@y-increment * 16);   width:@base-size + (@size-increment * 5);  }
	.emmao      { .transform(rotate(@rotation * 12));   left:15vw + (@x-increment * 15);   top:0vw + (@y-increment * 15);   width:@base-size + (@size-increment * 6);  }
	.tcr        { .transform(rotate(@rotation * 11));   left:15vw + (@x-increment * 14);   top:0vw + (@y-increment * 14);   width:@base-size + (@size-increment * 7);  }
	.gizmo      { .transform(rotate(@rotation * 10));   left:15vw + (@x-increment * 13);   top:0vw + (@y-increment * 13);   width:@base-size + (@size-increment * 8);  }
	.bar        { .transform(rotate(@rotation * 9));    left:15vw + (@x-increment * 12);   top:0vw + (@y-increment * 12);   width:@base-size + (@size-increment * 9);  }
	.dad        { .transform(rotate(@rotation * 8));    left:15vw + (@x-increment * 11);   top:0vw + (@y-increment * 11);   width:@base-size + (@size-increment * 10); }
	.fall       { .transform(rotate(@rotation * 7));    left:15vw + (@x-increment * 10);   top:0vw + (@y-increment * 10);   width:@base-size + (@size-increment * 11); }
	.asis       { .transform(rotate(@rotation * 6));    left:15vw + (@x-increment * 9);    top:0vw + (@y-increment * 9);    width:@base-size + (@size-increment * 12); }
	.hypotenuse { .transform(rotate(@rotation * 5));    left:15vw + (@x-increment * 8);    top:0vw + (@y-increment * 8);    width:@base-size + (@size-increment * 13); }
	.sigh       { .transform(rotate(@rotation * 4));    left:15vw + (@x-increment * 7);    top:0vw + (@y-increment * 7);    width:@base-size + (@size-increment * 14); }
	.fd         { .transform(rotate(@rotation * 3));    left:15vw + (@x-increment * 6);    top:0vw + (@y-increment * 6);    width:@base-size + (@size-increment * 15); }
	.atlas      { .transform(rotate(@rotation * 2));    left:15vw + (@x-increment * 5);    top:0vw + (@y-increment * 5);    width:@base-size + (@size-increment * 16); }
	.clarity    { .transform(rotate(@rotation * 1));    left:15vw + (@x-increment * 4);    top:0vw + (@y-increment * 4);    width:@base-size + (@size-increment * 17); }
	.dottedlegs { .transform(rotate(@rotation * 0));    left:15vw + (@x-increment * 3);    top:0vw + (@y-increment * 3);    width:@base-size + (@size-increment * 18); }
	.tdr        { .transform(rotate(@rotation * -1));   left:15vw + (@x-increment * 2);    top:0vw + (@y-increment * 2);    width:@base-size + (@size-increment * 19); }
	.grounded   { .transform(rotate(@rotation * -2));   left:15vw + (@x-increment * 1);    top:0vw + (@y-increment * 1);    width:@base-size + (@size-increment * 20); }
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Box sizing
.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	   -moz-box-sizing: @boxmodel;
		    box-sizing: @boxmodel;
}

// Transforms
.transform(@transform) {
	-webkit-transform: @transform;
	   -moz-transform: @transform;
	     -o-transform: @transform;
			transform: @transform;
}

// Transitions
.transition(@transition) {
	-webkit-transition: @transition;
	   -moz-transition: @transition;
	     -o-transition: @transition;
			transition: @transition;
}